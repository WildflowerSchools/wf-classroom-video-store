---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: video-service-efs
provisioner: honeycomb.wildflower-tech/video-service-efs

---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: video-service
  name: video-service-efs-provisioner
data:
  file.system.id: fs-0cf43d19ba1ae22f5
  aws.region: us-east-2
  provisioner.name: honeycomb.wildflower-tech/video-service-efs
  dns.name: "fs-0cf43d19ba1ae22f5.efs.us-east-2.amazonaws.com"

---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: video-service
  name: video-service-efs-provisioner

---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: video-service
  name: video-service-efs-provisioner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: video-service-efs-provisioner
  strategy:
    type: Recreate
  template:
    metadata:
      namespace: video-service
      labels:
        app: video-service-efs-provisioner
    spec:
      serviceAccount: video-service-efs-provisioner
      containers:
        - name: video-service-efs-provisioner
          image: quay.io/external_storage/efs-provisioner:latest
          securityContext:
            privileged: true
          env:
            - name: FILE_SYSTEM_ID
              valueFrom:
                configMapKeyRef:
                  name: video-service-efs-provisioner
                  key: file.system.id
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: video-service-efs-provisioner
                  key: aws.region
            - name: DNS_NAME
              valueFrom:
                configMapKeyRef:
                  name: video-service-efs-provisioner
                  key: dns.name
                  optional: true
            - name: PROVISIONER_NAME
              valueFrom:
                configMapKeyRef:
                  name: video-service-efs-provisioner
                  key: provisioner.name
          volumeMounts:
            - name: pv-volume
              mountPath: /persistentvolumes
      volumes:
        - name: pv-volume
          nfs:
            server: fs-0cf43d19ba1ae22f5.efs.us-east-2.amazonaws.com
            path: /

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: video-service-efs-provisioner-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "update", "patch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: video-service
  name: video-service-efs-provisioner-runner-bind
subjects:
  - kind: ServiceAccount
    name: video-service-efs-provisioner
    namespace: video-service
roleRef:
  kind: ClusterRole
  name: video-service-efs-provisioner-runner
  apiGroup: rbac.authorization.k8s.io

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: video-service
  name: leader-locking-efs-provisioner
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: video-service
  name: leader-locking-efs-provisioner
subjects:
  - kind: ServiceAccount
    name: video-service-efs-provisioner
    namespace: video-service
roleRef:
  kind: Role
  name: leader-locking-efs-provisioner
  apiGroup: rbac.authorization.k8s.io

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: video-service
  name: video-service-efs-pvc
  annotations:
    volume.beta.kubernetes.io/storage-class: "video-service-efs"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Mi
