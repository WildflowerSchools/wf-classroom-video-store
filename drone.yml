kind: pipeline
type: kubernetes
name: drone
service_account_name: default

metadata:
  namespace: drone

steps:
- name: set-tag
  image: python:3.9
  environment:
    DRONE: "true"
  commands:
  - echo -n v$DRONE_BUILD_NUMBER > .tags
  - cat .tags
- name: docker-build
  image: plugins/docker
  when:
    branch:
    - main
    event:
      exclude:
      - pull_request
  settings:
    dockerfile: deployment/app.dockerfile
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: wildflowerschools/wf-classroom-video-store
# - name: docker-build-slim
#   image: docker:dind
#   when:
#     branch:
#       - main
#     event:
#       exclude:
#         - pull_request
#   environment:
#     DRONE: "true"
#     USERNAME:
#       from_secret: docker_username
#     PASSWORD:
#       from_secret: docker_password
#     TAG: wildflowerschools/wf-classroom-video-store
#   commands:
#     - export TAG_WITH_VERSION=$TAG:v$DRONE_BUILD_NUMBER
#     - export TAG_WITH_VERSION_SLIM=$TAG_WITH_VERSION-slim
#     - sleep 9 # give docker enough time to start
#     # Pull recently built image from docker hub
#     - docker pull $TAG_WITH_VERSION
#     # Added "--include-cert-dirs" to resolve cacert errors
#     # Added "--include-path /usr/local/lib" to avoid issues with pytz
#     # Added "--include-path /lib" to avoid issues with urllib3 and dns lookup
#     - docker run -v /var/run/docker.sock:/var/run/docker.sock dslim/docker-slim build --include-cert-dirs --include-path /lib --include-path /usr/local/lib --tag $TAG_WITH_VERSION_SLIM $TAG_WITH_VERSION
#     - docker images
#     - docker login -u $USERNAME -p $PASSWORD
#     - docker push $TAG_WITH_VERSION_SLIM
#   volumes:
#     - name: dockersock
#       path: /var/run

# services:
#   - name: docker
#     image: docker:dind
#     privileged: true
#     volumes:
#       - name: dockersock
#         path: /var/run

# volumes:
#   - name: dockersock
#     temp: {}
